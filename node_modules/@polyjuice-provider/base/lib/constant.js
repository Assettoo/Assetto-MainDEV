"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEPLOY_CONTRACT_DOCS_LINK = exports.CONTRACT_BYTE_CODE_HASH_HEAD_IN_BYTE = exports.CONTRACT_BYTE_CODE_ID_OFFSET = exports.MAX_CONTRACT_CODE_SIZE_IN_BYTE = exports.DEFAULT_ETH_TO_CKB_SUDT_DECIMAL = exports.DEFAULT_SUDT_FEE_HEX_STRING = exports.DEFAULT_SUDT_ID_HEX_STRING = exports.WAIT_LOOP_INTERVAL_MILSECS = exports.WAIT_TIMEOUT_MILSECS = exports.EMPTY_ABI_ITEM_SERIALIZE_STR = exports.HEX_CHARACTERS = exports.DEFAULT_ETH_LOGS_BLOOM = exports.DEFAULT_EMPTY_ETH_ADDRESS = exports.U128_MAX = exports.U128_MIN = exports.POLY_BLOCK_DIFFICULTY = exports.POLY_MIN_GAS_PRICE = exports.POLY_MAX_TRANSACTION_GAS_LIMIT = exports.POLY_MAX_BLOCK_GAS_LIMIT = void 0;
// source: https://github.com/nervosnetwork/godwoken-polyjuice/blob/main/docs/EVM-compatible.md
exports.POLY_MAX_BLOCK_GAS_LIMIT = 12500000;
exports.POLY_MAX_TRANSACTION_GAS_LIMIT = 12500000;
exports.POLY_MIN_GAS_PRICE = 0;
exports.POLY_BLOCK_DIFFICULTY = 2500000000000000;
exports.U128_MIN = BigInt(0);
exports.U128_MAX = BigInt("340282366920938463463374607431768211455");
// 340282366920938463463374607431768211455 equals to BigInt(2) ** BigInt(128) - BigInt(1)
// if we use formular instead of the direct result,
// in some case, boundler like webpack will turn ** into Math.pow(),
// which doesn't support BigInt type thus causing error.
// this is a known issue as https://github.com/facebook/create-react-app/issues/10785
exports.DEFAULT_EMPTY_ETH_ADDRESS = `0x${"0".repeat(40)}`;
exports.DEFAULT_ETH_LOGS_BLOOM = "0x" + "00".repeat(256);
exports.HEX_CHARACTERS = "0123456789abcdef";
exports.EMPTY_ABI_ITEM_SERIALIZE_STR = "0x";
// utils
// waitForTransactionReceipt
exports.WAIT_TIMEOUT_MILSECS = 225000; // 3.75 minutes
exports.WAIT_LOOP_INTERVAL_MILSECS = 1000; // 1 secs
// sudt transfer
exports.DEFAULT_SUDT_ID_HEX_STRING = "0x1";
exports.DEFAULT_SUDT_FEE_HEX_STRING = "0x0";
exports.DEFAULT_ETH_TO_CKB_SUDT_DECIMAL = 10000000000; // 1 eth = 1 ckb in layer2
// contract deployment
exports.MAX_CONTRACT_CODE_SIZE_IN_BYTE = 24000; // 24k byte
exports.CONTRACT_BYTE_CODE_ID_OFFSET = 12; // we use last 12 of bytecode string to identified contract
exports.CONTRACT_BYTE_CODE_HASH_HEAD_IN_BYTE = 8; // keccak(bytecode) first 8 bytes as HASH_HEAD
// docs link
exports.DEPLOY_CONTRACT_DOCS_LINK = "https://github.com/nervosnetwork/polyjuice-provider/readme.md";
//# sourceMappingURL=constant.js.map