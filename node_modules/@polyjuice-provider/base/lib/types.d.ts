import { HexNumber, HexString } from "@ckb-lumos/base";
import { AbiItem } from "web3-utils";
export declare type AbiItems = AbiItem[];
export declare type PolyjuiceConfig = {
    rollupTypeHash?: string;
    ethAccountLockCodeHash?: string;
    creatorId?: HexNumber;
    defaultFromAddress?: HexString;
    abiItems?: AbiItems;
    web3Url?: string;
};
export declare enum ShortAddressType {
    eoaAddress = 0,
    contractAddress = 1,
    notExistEoaAddress = 2,
    notExistContractAddress = 3,
    creatorAddress = 4
}
export interface ShortAddress {
    value: HexString;
    type: ShortAddressType;
}
export declare enum SigningMessageType {
    withPrefix = 0,
    noPrefix = 1
}
export declare enum FailedReasonStatusType {
    "SUCCESS" = 0,
    "FAILURE" = 1,
    "REVERT" = 2,
    "OUT_OF_GAS" = 3,
    "INVALID_INSTRUCTION" = 4,
    "UNDEFINED_INSTRUCTION" = 5,
    "STACK_OVERFLOW" = 6,
    "STACK_UNDERFLOW" = 7,
    "BAD_JUMP_DESTINATION" = 8,
    "INVALID_MEMORY_ACCESS" = 9,
    "CALL_DEPTH_EXCEEDED" = 10,
    "STATIC_MODE_VIOLATION" = 11,
    "PRECOMPILE_FAILURE" = 12,
    "CONTRACT_VALIDATION_FAILURE" = 13,
    "ARGUMENT_OUT_OF_RANGE" = 14,
    "WASM_UNREACHABLE_INSTRUCTION" = 15,
    "WASM_TRAP" = 16,
    "INSUFFICIENT_BALANCE" = 17,
    "INTERNAL_ERROR" = 18,
    "REJECTED" = 19,
    "OUT_OF_MEMORY" = 20
}
export interface FailedReason {
    status_code: HexNumber;
    status_type: FailedReasonStatusType;
    message: string;
}
export interface RpcFailedError {
    code: number;
    message: string;
    data: {
        failed_reason: FailedReason;
    };
}
