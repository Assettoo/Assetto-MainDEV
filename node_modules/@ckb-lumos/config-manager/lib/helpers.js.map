{"version":3,"sources":["../src/helpers.ts"],"names":["findConfigByScript","scriptTemplate","SCRIPTS","scripts","Object","values","find","item","CODE_HASH","code_hash","HASH_TYPE","hash_type","nameOfScript","foundEntry","entries","config","undefined"],"mappings":";;;;;;;;AAEA;;AAIO,SAASA,kBAAT,CACLC,cADK,EAELC,OAFK,EAGqB;AAC1B,QAAMC,OAAO,GAAGD,OAAO,IAAI,0BAAYA,OAAvC;AAEA,SAAOE,MAAM,CAACC,MAAP,CAAcF,OAAd,EAAuBG,IAAvB,CACJC,IAAD,IACE,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,SAAN,MAAoBP,cAAc,CAACQ,SAAnC,IACA,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,SAAN,MAAoBT,cAAc,CAACU,SAHhC,CAAP;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,YAAT,CACLX,cADK,EAELC,OAFK,EAGgB;AACrB,QAAMC,OAAO,GAAGD,OAAO,IAAI,0BAAYA,OAAvC;AAEA,QAAMW,UAAU,GAAGT,MAAM,CAACU,OAAP,CAAeX,OAAf,EAAwBG,IAAxB,CACjB,CAAC,GAAGS,MAAH,CAAD,KACE,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEP,SAAR,MAAsBP,cAAc,CAACQ,SAArC,IACA,CAAAM,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEL,SAAR,MAAsBT,cAAc,CAACU,SAHtB,CAAnB;AAMA,MAAI,CAACE,UAAL,EAAiB,OAAOG,SAAP;AACjB,SAAOH,UAAU,CAAC,CAAD,CAAjB;AACD","sourcesContent":["import { Script } from \"@ckb-lumos/base\";\nimport { ScriptConfig, ScriptConfigs } from \"./types\";\nimport { getConfig } from \"./manager\";\n\ntype ScriptTemplate = Omit<Script, \"args\">;\n\nexport function findConfigByScript(\n  scriptTemplate: ScriptTemplate,\n  SCRIPTS?: ScriptConfigs\n): ScriptConfig | undefined {\n  const scripts = SCRIPTS || getConfig().SCRIPTS;\n\n  return Object.values(scripts).find(\n    (item) =>\n      item?.CODE_HASH === scriptTemplate.code_hash &&\n      item?.HASH_TYPE === scriptTemplate.hash_type\n  );\n}\n\n/**\n *\n * We may need to determine if a `scriptTemplate` is a kind of ScriptConfig\n *\n * ```typescript\n * if (keyOfScript({ code_hash... })  === 'SECP256K1')  {\n *   // ...\n * }\n * ```\n * @param scriptTemplate\n * @param SCRIPTS\n */\nexport function nameOfScript<S extends ScriptConfigs>(\n  scriptTemplate: ScriptTemplate,\n  SCRIPTS?: ScriptConfigs\n): keyof S | undefined {\n  const scripts = SCRIPTS || getConfig().SCRIPTS;\n\n  const foundEntry = Object.entries(scripts).find(\n    ([, config]) =>\n      config?.CODE_HASH === scriptTemplate.code_hash &&\n      config?.HASH_TYPE === scriptTemplate.hash_type\n  );\n\n  if (!foundEntry) return undefined;\n  return foundEntry[0];\n}\n"],"file":"helpers.js"}