{"version":3,"sources":["../src/type.ts"],"names":["IndexerEmitter","EventEmitter"],"mappings":";;;;;;;AAWA;;AA6FO,MAAMA,cAAN,SAA6BC,oBAA7B,CAA0C","sourcesContent":["import {\n  Cell,\n  Hexadecimal,\n  HexString,\n  QueryOptions,\n  Script,\n  OutPoint,\n  HexNumber,\n  Output,\n  TransactionWithStatus,\n} from \"@ckb-lumos/base\";\nimport { EventEmitter } from \"events\";\nimport { BIish } from \"@ckb-lumos/bi\";\n\nexport type ScriptType = \"type\" | \"lock\";\nexport type Order = \"asc\" | \"desc\";\n\nexport interface CKBIndexerQueryOptions extends QueryOptions {\n  outputDataLenRange?: HexadecimalRange;\n  outputCapacityRange?: HexadecimalRange;\n  bufferSize?: number;\n}\n\nexport type HexadecimalRange = [Hexadecimal, Hexadecimal];\nexport interface SearchFilter {\n  script?: Script;\n  output_data_len_range?: HexadecimalRange; //empty\n  output_capacity_range?: HexadecimalRange; //empty\n  block_range?: HexadecimalRange; //fromBlock-toBlock\n}\nexport interface SearchKey {\n  script: Script;\n  script_type: ScriptType;\n  filter?: SearchFilter;\n}\n\nexport interface GetLiveCellsResult {\n  last_cursor: string;\n  objects: IndexerCell[];\n}\n\nexport interface rpcResponse {\n  status: number;\n  data: rpcResponseData;\n}\n\nexport interface rpcResponseData {\n  result: string;\n  error: string;\n}\n\nexport interface IndexerCell {\n  block_number: Hexadecimal;\n  out_point: OutPoint;\n  output: {\n    capacity: HexNumber;\n    lock: Script;\n    type?: Script;\n  };\n  output_data: HexString;\n  tx_index: Hexadecimal;\n}\n\nexport interface TerminatorResult {\n  stop: boolean;\n  push: boolean;\n}\n\nexport declare type Terminator = (\n  index: number,\n  cell: Cell\n) => TerminatorResult;\n\nexport type HexNum = string;\nexport type IOType = \"input\" | \"output\" | \"both\";\nexport type Bytes32 = string;\nexport type IndexerTransaction = {\n  block_number: HexNum;\n  io_index: HexNum;\n  io_type: IOType;\n  tx_hash: Bytes32;\n  tx_index: HexNum;\n};\nexport interface IndexerTransactionList {\n  lastCursor: string | undefined;\n  objects: IndexerTransaction[];\n}\n\nexport interface GetCellsResults {\n  lastCursor: string;\n  objects: Cell[];\n}\n\nexport interface SearchKeyFilter {\n  sizeLimit?: number;\n  order?: Order;\n  lastCursor?: string | undefined;\n}\n\nexport interface OutputToVerify {\n  output: Output;\n  outputData: string;\n}\n\nexport class IndexerEmitter extends EventEmitter {\n  lock?: Script;\n  type?: Script;\n  outputData?: HexString | \"any\";\n  argsLen?: number | \"any\";\n  fromBlock?: BIish;\n}\n\nexport interface OtherQueryOptions {\n  withBlockHash: true;\n  ckbRpcUrl: string;\n}\n\nexport interface GetTransactionRPCResult {\n  jsonrpc: string;\n  id: number;\n  result: TransactionWithStatus;\n}\n\nexport interface JsonRprRequestBody {\n  id: string | number;\n  jsonrpc: string;\n  method: string;\n  params: string[];\n}\n"],"file":"type.js"}