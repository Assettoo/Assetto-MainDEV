{"ast":null,"code":"module.exports = function (imports) {\n  var sha256 = imports.sha256;\n  var XMLHttpRequest = imports.XMLHttpRequest;\n\n  function at(url) {\n    var requestBase = String(url + \"/api/v0\"); // (Uint8Array | String) -> String\n\n    function bytesToString(bytes) {\n      if (typeof bytes === \"string\") {\n        return bytes;\n      } else {\n        var str = \"\";\n\n        for (var i = 0; i < bytes.length; ++i) {\n          str += String.fromCharCode(bytes[i]);\n        }\n\n        return str;\n      }\n    } // String -> Uint8Array\n\n\n    function stringToBytes(string) {\n      var bytes = new Uint8Array(string.length);\n\n      for (var i = 0; i < string.length; ++i) {\n        bytes[i] = string.charCodeAt(i);\n      }\n\n      return bytes;\n    } // Uint8Array -> String\n\n\n    var toBase58 = function () {\n      var ALPHABET = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n      return function (buffer) {\n        if (buffer.length === 0) {\n          return \"\";\n        }\n\n        var digits = [0];\n        var i = 0;\n\n        while (i < buffer.length) {\n          var j = 0;\n          var carry = 0;\n\n          while (j < digits.length) {\n            digits[j] <<= 8;\n            j++;\n          }\n\n          digits[0] += buffer[i];\n          j = 0;\n\n          while (j < digits.length) {\n            digits[j] += carry;\n            carry = digits[j] / 58 | 0;\n            digits[j] %= 58;\n            ++j;\n          }\n\n          while (carry) {\n            digits.push(carry % 58);\n            carry = carry / 58 | 0;\n          }\n\n          i++;\n        }\n\n        i = 0;\n\n        while (buffer[i] === 0 && i < buffer.length - 1) {\n          digits.push(0);\n          i++;\n        }\n\n        return digits.reverse().map(function (digit) {\n          return ALPHABET[digit];\n        }).join(\"\");\n      };\n    }();\n\n    function sendAsync(opts, cb) {\n      var request = new XMLHttpRequest(); // eslint-disable-line\n\n      var options = opts || {};\n\n      var callback = cb || function emptyCallback() {};\n\n      request.onreadystatechange = function () {\n        if (request.readyState === 4 && request.timeout !== 1) {\n          if (request.status !== 200) {\n            callback(new Error(\"[ipfs-mini] status \" + request.status + \": \" + request.responseText), null);\n          } else {\n            try {\n              callback(null, options.jsonParse ? JSON.parse(request.responseText) : request.responseText);\n            } catch (jsonError) {\n              callback(new Error(\"IPFS error\"));\n            }\n          }\n        }\n      };\n\n      request.open(options.payload ? \"POST\" : \"GET\", requestBase + opts.uri);\n\n      if (options.accept) {\n        request.setRequestHeader('accept', options.accept);\n      }\n\n      if (options.payload && options.boundary) {\n        request.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + options.boundary);\n        request.send(options.payload);\n      } else {\n        request.send();\n      }\n    }\n\n    function createBoundary(data) {\n      while (true) {\n        var boundary = \"----IPFSMini\" + Math.random() * 100000 + \".\" + Math.random() * 100000;\n\n        if (data.indexOf(boundary) === -1) {\n          return boundary;\n        }\n      }\n    } // (Uint8Array | String) -> CID\n\n\n    function add(bytes) {\n      var string = bytesToString(bytes);\n      return new Promise(function (resolve, reject) {\n        var boundary = createBoundary(string);\n        var payload = \"--\" + boundary + '\\r\\nContent-Disposition: form-data; name=\"path\"\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\n' + string + \"\\r\\n--\" + boundary + \"--\";\n        sendAsync({\n          jsonParse: true,\n          accept: 'application/json',\n          uri: '/add?raw-leaves=true&pin=true',\n          payload: payload,\n          boundary: boundary\n        }, function (err, result) {\n          err ? reject(err) : resolve(result.Hash);\n        });\n      });\n    } // CID -> Promise Uint8Array\n\n\n    function get(ipfsHash) {\n      return cat(ipfsHash).then(stringToBytes);\n    } // CID -> Promise String\n\n\n    function cat(ipfsHash) {\n      return new Promise(function (resolve, reject) {\n        sendAsync({\n          uri: \"/cat/\" + ipfsHash\n        }, function (err, res) {\n          err ? reject(err) : resolve(res);\n        });\n      });\n    } // HexString -> Promise CID\n\n\n    function cid(bytes) {\n      return sha256(bytesToString(bytes)).then(function (hash) {\n        var hex = \"01551220\" + hash;\n        var bytes = new Uint8Array(hex.length / 2);\n\n        for (var i = 0; i < hex.length; i += 2) {\n          bytes[i / 2] = parseInt(hex.slice(i, i + 2), 16);\n        }\n\n        return \"z\" + toBase58(bytes);\n      });\n    }\n\n    return {\n      add: add,\n      get: get,\n      cid: cid,\n      cat: cat\n    };\n  }\n\n  ;\n  return {\n    at: at\n  };\n};","map":{"version":3,"sources":["/Users/pranjilpathak/Downloads/certifier.-main/node_modules/nano-ipfs-store/nano-ipfs-store.js"],"names":["module","exports","imports","sha256","XMLHttpRequest","at","url","requestBase","String","bytesToString","bytes","str","i","length","fromCharCode","stringToBytes","string","Uint8Array","charCodeAt","toBase58","ALPHABET","buffer","digits","j","carry","push","reverse","map","digit","join","sendAsync","opts","cb","request","options","callback","emptyCallback","onreadystatechange","readyState","timeout","status","Error","responseText","jsonParse","JSON","parse","jsonError","open","payload","uri","accept","setRequestHeader","boundary","send","createBoundary","data","Math","random","indexOf","add","Promise","resolve","reject","err","result","Hash","get","ipfsHash","cat","then","res","cid","hash","hex","parseInt","slice"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAClC,MAAIC,MAAM,GAAGD,OAAO,CAACC,MAArB;AACA,MAAIC,cAAc,GAAGF,OAAO,CAACE,cAA7B;;AAEA,WAASC,EAAT,CAAYC,GAAZ,EAAiB;AACf,QAAIC,WAAW,GAAGC,MAAM,CAACF,GAAG,GAAC,SAAL,CAAxB,CADe,CAGf;;AACA,aAASG,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAOA,KAAP;AACD,OAFD,MAEO;AACL,YAAIC,GAAG,GAAG,EAAV;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkC,EAAED,CAApC,EAAuC;AACrCD,UAAAA,GAAG,IAAIH,MAAM,CAACM,YAAP,CAAoBJ,KAAK,CAACE,CAAD,CAAzB,CAAP;AACD;;AACD,eAAOD,GAAP;AACD;AACF,KAdc,CAgBf;;;AACA,aAASI,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,UAAIN,KAAK,GAAG,IAAIO,UAAJ,CAAeD,MAAM,CAACH,MAAtB,CAAZ;;AACA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,MAAM,CAACH,MAA3B,EAAmC,EAAED,CAArC,EAAwC;AACtCF,QAAAA,KAAK,CAACE,CAAD,CAAL,GAAWI,MAAM,CAACE,UAAP,CAAkBN,CAAlB,CAAX;AACD;;AACD,aAAOF,KAAP;AACD,KAvBc,CAyBf;;;AACA,QAAIS,QAAQ,GAAI,YAAW;AACzB,UAAIC,QAAQ,GAAG,4DAAf;AACA,aAAO,UAASC,MAAT,EAAiB;AACtB,YAAIA,MAAM,CAACR,MAAP,KAAkB,CAAtB,EAAyB;AACvB,iBAAO,EAAP;AACD;;AACD,YAAIS,MAAM,GAAG,CAAC,CAAD,CAAb;AACA,YAAIV,CAAC,GAAG,CAAR;;AACA,eAAOA,CAAC,GAAGS,MAAM,CAACR,MAAlB,EAA0B;AACxB,cAAIU,CAAC,GAAG,CAAR;AACA,cAAIC,KAAK,GAAG,CAAZ;;AACA,iBAAOD,CAAC,GAAGD,MAAM,CAACT,MAAlB,EAA0B;AACxBS,YAAAA,MAAM,CAACC,CAAD,CAAN,KAAc,CAAd;AACAA,YAAAA,CAAC;AACF;;AACDD,UAAAA,MAAM,CAAC,CAAD,CAAN,IAAaD,MAAM,CAACT,CAAD,CAAnB;AACAW,UAAAA,CAAC,GAAG,CAAJ;;AACA,iBAAOA,CAAC,GAAGD,MAAM,CAACT,MAAlB,EAA0B;AACxBS,YAAAA,MAAM,CAACC,CAAD,CAAN,IAAaC,KAAb;AACAA,YAAAA,KAAK,GAAIF,MAAM,CAACC,CAAD,CAAN,GAAY,EAAb,GAAmB,CAA3B;AACAD,YAAAA,MAAM,CAACC,CAAD,CAAN,IAAa,EAAb;AACA,cAAEA,CAAF;AACD;;AACD,iBAAOC,KAAP,EAAc;AACZF,YAAAA,MAAM,CAACG,IAAP,CAAYD,KAAK,GAAG,EAApB;AACAA,YAAAA,KAAK,GAAIA,KAAK,GAAG,EAAT,GAAe,CAAvB;AACD;;AACDZ,UAAAA,CAAC;AACF;;AACDA,QAAAA,CAAC,GAAG,CAAJ;;AACA,eAAOS,MAAM,CAACT,CAAD,CAAN,KAAc,CAAd,IAAmBA,CAAC,GAAGS,MAAM,CAACR,MAAP,GAAgB,CAA9C,EAAiD;AAC/CS,UAAAA,MAAM,CAACG,IAAP,CAAY,CAAZ;AACAb,UAAAA,CAAC;AACF;;AACD,eAAOU,MAAM,CAACI,OAAP,GAAiBC,GAAjB,CAAqB,UAASC,KAAT,EAAgB;AAC1C,iBAAOR,QAAQ,CAACQ,KAAD,CAAf;AACD,SAFM,EAEJC,IAFI,CAEC,EAFD,CAAP;AAGD,OAnCD;AAoCD,KAtCc,EAAf;;AAwCA,aAASC,SAAT,CAAmBC,IAAnB,EAAyBC,EAAzB,EAA6B;AAC3B,UAAIC,OAAO,GAAG,IAAI7B,cAAJ,EAAd,CAD2B,CACS;;AACpC,UAAI8B,OAAO,GAAGH,IAAI,IAAI,EAAtB;;AACA,UAAII,QAAQ,GAAGH,EAAE,IAAI,SAASI,aAAT,GAAyB,CAAE,CAAhD;;AAEAH,MAAAA,OAAO,CAACI,kBAAR,GAA6B,YAAW;AACtC,YAAIJ,OAAO,CAACK,UAAR,KAAuB,CAAvB,IAA4BL,OAAO,CAACM,OAAR,KAAoB,CAApD,EAAuD;AACrD,cAAIN,OAAO,CAACO,MAAR,KAAmB,GAAvB,EAA4B;AAC1BL,YAAAA,QAAQ,CAAC,IAAIM,KAAJ,CAAU,wBAAsBR,OAAO,CAACO,MAA9B,GAAqC,IAArC,GAA0CP,OAAO,CAACS,YAA5D,CAAD,EAA4E,IAA5E,CAAR;AACD,WAFD,MAEO;AACL,gBAAI;AACFP,cAAAA,QAAQ,CAAC,IAAD,EAAQD,OAAO,CAACS,SAAR,GAAoBC,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACS,YAAnB,CAApB,GAAuDT,OAAO,CAACS,YAAvE,CAAR;AACD,aAFD,CAEE,OAAOI,SAAP,EAAkB;AAClBX,cAAAA,QAAQ,CAAC,IAAIM,KAAJ,CAAU,YAAV,CAAD,CAAR;AACD;AACF;AACF;AACF,OAZD;;AAcAR,MAAAA,OAAO,CAACc,IAAR,CAAab,OAAO,CAACc,OAAR,GAAkB,MAAlB,GAA2B,KAAxC,EAA+CzC,WAAW,GAAGwB,IAAI,CAACkB,GAAlE;;AAEA,UAAIf,OAAO,CAACgB,MAAZ,EAAoB;AAClBjB,QAAAA,OAAO,CAACkB,gBAAR,CAAyB,QAAzB,EAAmCjB,OAAO,CAACgB,MAA3C;AACD;;AAED,UAAIhB,OAAO,CAACc,OAAR,IAAmBd,OAAO,CAACkB,QAA/B,EAAyC;AACvCnB,QAAAA,OAAO,CAACkB,gBAAR,CAAyB,cAAzB,EAAyC,mCAAiCjB,OAAO,CAACkB,QAAlF;AACAnB,QAAAA,OAAO,CAACoB,IAAR,CAAanB,OAAO,CAACc,OAArB;AACD,OAHD,MAGO;AACLf,QAAAA,OAAO,CAACoB,IAAR;AACD;AACF;;AAED,aAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,aAAO,IAAP,EAAa;AACX,YAAIH,QAAQ,GAAG,iBAAgBI,IAAI,CAACC,MAAL,KAAgB,MAAhC,GAAwC,GAAxC,GAA6CD,IAAI,CAACC,MAAL,KAAgB,MAA5E;;AACA,YAAIF,IAAI,CAACG,OAAL,CAAaN,QAAb,MAA2B,CAAC,CAAhC,EAAmC;AACjC,iBAAOA,QAAP;AACD;AACF;AACF,KA1Gc,CA4Gf;;;AACA,aAASO,GAAT,CAAajD,KAAb,EAAoB;AAClB,UAAIM,MAAM,GAAGP,aAAa,CAACC,KAAD,CAA1B;AACA,aAAO,IAAIkD,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,YAAIV,QAAQ,GAAGE,cAAc,CAACtC,MAAD,CAA7B;AACA,YAAIgC,OAAO,GAAG,OAAKI,QAAL,GAAc,mGAAd,GAAkHpC,MAAlH,GAAyH,QAAzH,GAAkIoC,QAAlI,GAA2I,IAAzJ;AACAtB,QAAAA,SAAS,CAAC;AACRa,UAAAA,SAAS,EAAE,IADH;AAERO,UAAAA,MAAM,EAAE,kBAFA;AAGRD,UAAAA,GAAG,EAAE,+BAHG;AAIRD,UAAAA,OAAO,EAAEA,OAJD;AAKRI,UAAAA,QAAQ,EAAEA;AALF,SAAD,EAMN,UAASW,GAAT,EAAcC,MAAd,EAAsB;AACvBD,UAAAA,GAAG,GAAGD,MAAM,CAACC,GAAD,CAAT,GAAiBF,OAAO,CAACG,MAAM,CAACC,IAAR,CAA3B;AACD,SARQ,CAAT;AASD,OAZM,CAAP;AAaD,KA5Hc,CA8Hf;;;AACA,aAASC,GAAT,CAAaC,QAAb,EAAuB;AACrB,aAAOC,GAAG,CAACD,QAAD,CAAH,CAAcE,IAAd,CAAmBtD,aAAnB,CAAP;AACD,KAjIc,CAmIf;;;AACA,aAASqD,GAAT,CAAaD,QAAb,EAAuB;AACrB,aAAO,IAAIP,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3ChC,QAAAA,SAAS,CAAC;AAACmB,UAAAA,GAAG,EAAE,UAAQkB;AAAd,SAAD,EAA0B,UAASJ,GAAT,EAAcO,GAAd,EAAmB;AACpDP,UAAAA,GAAG,GAAGD,MAAM,CAACC,GAAD,CAAT,GAAiBF,OAAO,CAACS,GAAD,CAA3B;AACD,SAFQ,CAAT;AAGD,OAJM,CAAP;AAKD,KA1Ic,CA4If;;;AACA,aAASC,GAAT,CAAa7D,KAAb,EAAoB;AAClB,aAAOP,MAAM,CAACM,aAAa,CAACC,KAAD,CAAd,CAAN,CAA6B2D,IAA7B,CAAkC,UAASG,IAAT,EAAe;AACtD,YAAIC,GAAG,GAAG,aAAaD,IAAvB;AACA,YAAI9D,KAAK,GAAG,IAAIO,UAAJ,CAAewD,GAAG,CAAC5D,MAAJ,GAAa,CAA5B,CAAZ;;AACA,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6D,GAAG,CAAC5D,MAAxB,EAAgCD,CAAC,IAAI,CAArC,EAAwC;AACtCF,UAAAA,KAAK,CAACE,CAAC,GAAG,CAAL,CAAL,GAAe8D,QAAQ,CAACD,GAAG,CAACE,KAAJ,CAAU/D,CAAV,EAAaA,CAAC,GAAG,CAAjB,CAAD,EAAsB,EAAtB,CAAvB;AACD;;AACD,eAAO,MAAMO,QAAQ,CAACT,KAAD,CAArB;AACD,OAPM,CAAP;AAQD;;AAED,WAAO;AACLiD,MAAAA,GAAG,EAAEA,GADA;AAELO,MAAAA,GAAG,EAAEA,GAFA;AAGLK,MAAAA,GAAG,EAAEA,GAHA;AAILH,MAAAA,GAAG,EAAEA;AAJA,KAAP;AAMD;;AAAA;AAED,SAAO;AAAC/D,IAAAA,EAAE,EAAEA;AAAL,GAAP;AACD,CArKD","sourcesContent":["module.exports = function (imports) {\n  var sha256 = imports.sha256;\n  var XMLHttpRequest = imports.XMLHttpRequest;\n\n  function at(url) {\n    var requestBase = String(url+\"/api/v0\");\n\n    // (Uint8Array | String) -> String\n    function bytesToString(bytes) {\n      if (typeof bytes === \"string\") {\n        return bytes;\n      } else {\n        var str = \"\";\n        for (var i = 0; i < bytes.length; ++i) {\n          str += String.fromCharCode(bytes[i]);\n        }\n        return str;\n      }\n    }\n\n    // String -> Uint8Array\n    function stringToBytes(string) {\n      var bytes = new Uint8Array(string.length);\n      for (var i = 0; i < string.length; ++i) {\n        bytes[i] = string.charCodeAt(i);\n      }\n      return bytes;\n    }\n\n    // Uint8Array -> String\n    var toBase58 = (function() {\n      var ALPHABET = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n      return function(buffer) {\n        if (buffer.length === 0) {\n          return \"\";\n        }\n        var digits = [0];\n        var i = 0;\n        while (i < buffer.length) {\n          var j = 0;\n          var carry = 0;\n          while (j < digits.length) {\n            digits[j] <<= 8;\n            j++;\n          }\n          digits[0] += buffer[i];\n          j = 0;\n          while (j < digits.length) {\n            digits[j] += carry;\n            carry = (digits[j] / 58) | 0;\n            digits[j] %= 58;\n            ++j;\n          }\n          while (carry) {\n            digits.push(carry % 58);\n            carry = (carry / 58) | 0;\n          }\n          i++;\n        }\n        i = 0;\n        while (buffer[i] === 0 && i < buffer.length - 1) {\n          digits.push(0);\n          i++;\n        }\n        return digits.reverse().map(function(digit) {\n          return ALPHABET[digit];\n        }).join(\"\");\n      };\n    })();\n\n    function sendAsync(opts, cb) {\n      var request = new XMLHttpRequest(); // eslint-disable-line\n      var options = opts || {};\n      var callback = cb || function emptyCallback() {};\n\n      request.onreadystatechange = function() {\n        if (request.readyState === 4 && request.timeout !== 1) {\n          if (request.status !== 200) {\n            callback(new Error(\"[ipfs-mini] status \"+request.status+\": \"+request.responseText), null);\n          } else {\n            try {\n              callback(null, (options.jsonParse ? JSON.parse(request.responseText) : request.responseText));\n            } catch (jsonError) {\n              callback(new Error(\"IPFS error\"));\n            }\n          }\n        }\n      };\n\n      request.open(options.payload ? \"POST\" : \"GET\", requestBase + opts.uri);\n\n      if (options.accept) {\n        request.setRequestHeader('accept', options.accept);\n      }\n\n      if (options.payload && options.boundary) {\n        request.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\"+options.boundary);\n        request.send(options.payload);\n      } else {\n        request.send();\n      }\n    }\n\n    function createBoundary(data) {\n      while (true) {\n        var boundary = \"----IPFSMini\"+(Math.random() * 100000)+\".\"+(Math.random() * 100000);\n        if (data.indexOf(boundary) === -1) {\n          return boundary;\n        }\n      }\n    }\n\n    // (Uint8Array | String) -> CID\n    function add(bytes) {\n      var string = bytesToString(bytes);\n      return new Promise(function(resolve, reject) {\n        var boundary = createBoundary(string);\n        var payload = \"--\"+boundary+'\\r\\nContent-Disposition: form-data; name=\"path\"\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\n'+string+\"\\r\\n--\"+boundary+\"--\";\n        sendAsync({\n          jsonParse: true,\n          accept: 'application/json',\n          uri: '/add?raw-leaves=true&pin=true',\n          payload: payload,\n          boundary: boundary\n        }, function(err, result) {\n          err ? reject(err) : resolve(result.Hash);\n        });\n      });\n    }\n\n    // CID -> Promise Uint8Array\n    function get(ipfsHash) {\n      return cat(ipfsHash).then(stringToBytes);\n    }\n\n    // CID -> Promise String\n    function cat(ipfsHash) {\n      return new Promise(function(resolve, reject) {\n        sendAsync({uri: \"/cat/\"+ipfsHash}, function(err, res) {\n          err ? reject(err) : resolve(res)\n        });\n      });\n    }\n\n    // HexString -> Promise CID\n    function cid(bytes) {\n      return sha256(bytesToString(bytes)).then(function(hash) { \n        var hex = \"01551220\" + hash;\n        var bytes = new Uint8Array(hex.length / 2);\n        for (var i = 0; i < hex.length; i += 2) {\n          bytes[i / 2] = parseInt(hex.slice(i, i + 2), 16);\n        }\n        return \"z\" + toBase58(bytes);\n      });\n    }\n\n    return {\n      add: add,\n      get: get,\n      cid: cid,\n      cat: cat\n    };\n  };\n\n  return {at: at};\n};\n"]},"metadata":{},"sourceType":"script"}