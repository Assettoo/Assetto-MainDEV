{"ast":null,"code":"var _jsxFileName = \"/Users/pranjilpathak/Downloads/Asseto/src/context/Web3Context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState, useCallback, useMemo } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\nimport abi from \"../utils/contractABI\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3Context = /*#__PURE__*/createContext({\n  balance: null,\n  error: null,\n  loadWeb3Modal: () => {},\n  logoutOfWeb3Modal: () => {},\n  accountAddress: \"\",\n  contract: null\n});\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      rpc: {\n        868455272153094: \" https://godwoken-testnet-web3-v1-rpc.ckbapp.dev/\"\n      }\n    }\n  }\n};\n\nconst Web3ContextProvider = props => {\n  _s();\n\n  const [network, setNetwork] = useState(\"0xaef3\");\n  const [provider, setProvider] = useState();\n  const [signedInAddress, setSignedInAddress] = useState(\"\");\n  const web3Modal = useMemo(() => {\n    return new Web3Modal({\n      providerOptions: providerOptions\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [network]);\n  const {\n    web3,\n    contract\n  } = useMemo(() => {\n    const web3 = new Web3(provider || \"https://godwoken-testnet-web3-v1-rpc.ckbapp.dev/\");\n    const contract = new web3.eth.Contract(abi.abi, \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\");\n    return {\n      web3,\n      contract\n    };\n  }, [provider]); // Modal Controls - Connect and Disconnect Wallets\n\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    console.log(\"Connected\", newProvider);\n\n    if (!!newProvider.wc) {\n      setProvider(newProvider);\n      setSignedInAddress(newProvider.accounts[0]);\n    } else {\n      setProvider(newProvider);\n      setSignedInAddress(newProvider.selectedAddress);\n    }\n  }, [web3Modal]);\n  const logoutOfWeb3Modal = useCallback(async () => {\n    setSignedInAddress(\"\");\n    web3Modal.clearCachedProvider();\n    window.location.reload();\n  }, [web3Modal]);\n  useEffect(() => {\n    console.log(provider);\n\n    if (provider) {\n      // Subscribe to accounts change\n      provider.on(\"accountsChanged\", accounts => {\n        console.log(\"accountsChanged\", accounts, provider);\n      }); // Subscribe to chainId change\n\n      provider.on(\"chainChanged\", chainId => {\n        console.log(\"Provider Chain Changed\", chainId, provider);\n      }); // Subscribe to provider connection\n\n      provider.on(\"connect\", info => {\n        console.log(\"Provider Connected\", info);\n      }); // Subscribe to provider disconnection\n\n      provider.on(\"disconnect\", error => {\n        console.log(\"disconnect\", error);\n      });\n    }\n  }, [provider]);\n  return /*#__PURE__*/_jsxDEV(Web3Context.Provider, {\n    value: {\n      loadWeb3Modal,\n      logoutOfWeb3Modal,\n      accountAddress: signedInAddress,\n      setNetwork,\n      contract,\n      web3\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this);\n}; // export default Web3ContextProvider;\n\n\n_s(Web3ContextProvider, \"ie/YPI1+5ie3lE9hEkqN03QJ61A=\");\n\n_c = Web3ContextProvider;\nexport { Web3Context, Web3ContextProvider as default }; // https://626face37b18fe0f65a8ed2f--chimerical-stardust-70ccd0.netlify.app/verify/?ipfsHash=${ipfsHash}&certkey=${certkey}\n\nvar _c;\n\n$RefreshReg$(_c, \"Web3ContextProvider\");","map":{"version":3,"sources":["/Users/pranjilpathak/Downloads/Asseto/src/context/Web3Context.js"],"names":["createContext","useEffect","useState","useCallback","useMemo","Web3Modal","Web3","abi","WalletConnectProvider","Web3Context","balance","error","loadWeb3Modal","logoutOfWeb3Modal","accountAddress","contract","providerOptions","walletconnect","package","options","rpc","Web3ContextProvider","props","network","setNetwork","provider","setProvider","signedInAddress","setSignedInAddress","web3Modal","web3","eth","Contract","newProvider","connect","console","log","wc","accounts","selectedAddress","clearCachedProvider","window","location","reload","on","chainId","info","children","default"],"mappings":"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","sourcesContent":["import {\n\tcreateContext,\n\tuseEffect,\n\tuseState,\n\tuseCallback,\n\tuseMemo,\n} from \"react\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\nimport abi from \"../utils/contractABI\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nconst Web3Context = createContext({\n\tbalance: null,\n\terror: null,\n\tloadWeb3Modal: () => {},\n\tlogoutOfWeb3Modal: () => {},\n\taccountAddress: \"\",\n\tcontract: null,\n});\n\nconst providerOptions = {\n\twalletconnect: {\n\t\tpackage: WalletConnectProvider,\n\t\toptions: {\n\t\t\trpc: {\n\t\t\t\t868455272153094: \" https://godwoken-testnet-web3-v1-rpc.ckbapp.dev/\",\n\t\t\t},\n\t\t},\n\t},\n};\n\nconst Web3ContextProvider = (props) => {\n\tconst [network, setNetwork] = useState(\"0xaef3\");\n\tconst [provider, setProvider] = useState();\n\tconst [signedInAddress, setSignedInAddress] = useState(\"\");\n\n\tconst web3Modal = useMemo(() => {\n\t\treturn new Web3Modal({\n\t\t\tproviderOptions: providerOptions,\n\t\t});\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [network]);\n\n\tconst { web3, contract } = useMemo(() => {\n\t\tconst web3 = new Web3(\n\t\t\tprovider || \"https://godwoken-testnet-web3-v1-rpc.ckbapp.dev/\"\n\t\t);\n\t\tconst contract = new web3.eth.Contract(\n\t\t\tabi.abi,\n\t\t\t\"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n\t\t);\n\t\treturn { web3, contract };\n\t}, [provider]);\n\n\t// Modal Controls - Connect and Disconnect Wallets\n\tconst loadWeb3Modal = useCallback(async () => {\n\t\tconst newProvider = await web3Modal.connect();\n\t\tconsole.log(\"Connected\", newProvider);\n\t\tif (!!newProvider.wc) {\n\t\t\tsetProvider(newProvider);\n\t\t\tsetSignedInAddress(newProvider.accounts[0]);\n\t\t} else {\n\t\t\tsetProvider(newProvider);\n\t\t\tsetSignedInAddress(newProvider.selectedAddress);\n\t\t}\n\t}, [web3Modal]);\n\tconst logoutOfWeb3Modal = useCallback(async () => {\n\t\tsetSignedInAddress(\"\");\n\t\tweb3Modal.clearCachedProvider();\n\t\twindow.location.reload();\n\t}, [web3Modal]);\n\n\tuseEffect(() => {\n\t\tconsole.log(provider);\n\t\tif (provider) {\n\t\t\t// Subscribe to accounts change\n\t\t\tprovider.on(\"accountsChanged\", (accounts) => {\n\t\t\t\tconsole.log(\"accountsChanged\", accounts, provider);\n\t\t\t});\n\t\t\t// Subscribe to chainId change\n\t\t\tprovider.on(\"chainChanged\", (chainId) => {\n\t\t\t\tconsole.log(\"Provider Chain Changed\", chainId, provider);\n\t\t\t});\n\t\t\t// Subscribe to provider connection\n\t\t\tprovider.on(\"connect\", (info) => {\n\t\t\t\tconsole.log(\"Provider Connected\", info);\n\t\t\t});\n\t\t\t// Subscribe to provider disconnection\n\t\t\tprovider.on(\"disconnect\", (error) => {\n\t\t\t\tconsole.log(\"disconnect\", error);\n\t\t\t});\n\t\t}\n\t}, [provider]);\n\n\treturn (\n\t\t<Web3Context.Provider\n\t\t\tvalue={{\n\t\t\t\tloadWeb3Modal,\n\t\t\t\tlogoutOfWeb3Modal,\n\t\t\t\taccountAddress: signedInAddress,\n\t\t\t\tsetNetwork,\n\t\t\t\tcontract,\n\t\t\t\tweb3,\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</Web3Context.Provider>\n\t);\n};\n\n// export default Web3ContextProvider;\nexport { Web3Context, Web3ContextProvider as default };\n\n\n\n// https://626face37b18fe0f65a8ed2f--chimerical-stardust-70ccd0.netlify.app/verify/?ipfsHash=${ipfsHash}&certkey=${certkey}"]},"metadata":{},"sourceType":"module"}