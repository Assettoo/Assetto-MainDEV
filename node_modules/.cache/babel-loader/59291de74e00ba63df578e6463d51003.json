{"ast":null,"code":"var _jsxFileName = \"/Users/pranjilpathak/Downloads/Asseto/src/components/Actions.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Web3Context } from \"../context/Web3Context\";\nimport Modal from \"./CreateModal\";\nimport ActionsSVG from \"../assets/actions.svg\";\nimport \"../styles/actions.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Actions = () => {\n  _s();\n\n  const [modalData, setModalData] = useState({\n    mode: \"closed\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actions\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      modalData: modalData,\n      setModalData: setModalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"txt\",\n          children: [\"Actions allow users to mutate the certificate status. They can either be \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Revoked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Reinstated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 7\n          }, this), \"Only certificates belonging to the users address will be revoked/ reinstated.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this), \"Encryption key is needed to perform any action.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ActionsSVG,\n          alt: \"actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      width: \"75%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action revoke\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Revoke Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"txt\",\n          children: [\"Revoke existing certificates by filling out the adjacent form.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), \"This action is reversible.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), \"Reinstate/ extend the validity of a certificate using the form below.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), \"Transaction gas charges are applied.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Revoke, {\n          setModalData: setModalData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      width: \"75%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action reinstate\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reinstate Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"txt\",\n          children: [\"Certificates can be reinstated using the adjacent form.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), \"Reinstating certificates only extends the expiration date and nothing more.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this), \"Transaction gas charges are applied.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Reinstate, {\n          setModalData: setModalData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Actions, \"t31wEXPr3va1GNE7nGQ/aTCg0fM=\");\n\n_c = Actions;\nconst condition = {\n  required: {\n    value: true,\n    message: \"This field is Required\"\n  }\n};\n\nconst Revoke = _ref => {\n  _s2();\n\n  var _errors$ipfsHash, _errors$certkey;\n\n  let {\n    setModalData\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    contract,\n    accountAddress\n  } = useContext(Web3Context);\n\n  const onSubmit = async data => {\n    if (accountAddress) {\n      setModalData({\n        mode: \"loading\"\n      });\n      await contract.methods.revoke(data.ipfsHash).send({\n        from: accountAddress\n      }).on(\"transactionHash\", function (hash) {\n        console.log(hash);\n      }).on(\"receipt\", function (receipt) {\n        setModalData({\n          mode: \"display\",\n          data: {\n            ipfsHash: data.ipfsHash,\n            certkey: data.certkey\n          },\n          receipt: receipt\n        });\n      }).on(\"error\", function (error) {\n        console.log(error);\n        window.alert(error.message);\n        setModalData(\"closed\");\n      });\n    } else window.alert(\"Please connect a wallet first\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"IPFS Hash (Address)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors[\"ipfsHash\"] && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_errors$ipfsHash = errors[\"ipfsHash\"]) === null || _errors$ipfsHash === void 0 ? void 0 : _errors$ipfsHash.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"ipfsHash\", condition),\n        type: \"text\",\n        name: \"ipfsHash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Certificate Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors[\"certkey\"] && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_errors$certkey = errors[\"certkey\"]) === null || _errors$certkey === void 0 ? void 0 : _errors$certkey.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"certkey\", condition),\n        type: \"text\",\n        name: \"certkey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Revoke Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Revoke, \"69Ff7Q0c29EvcIvg5fcqxUcnCYs=\", false, function () {\n  return [useForm];\n});\n\n_c2 = Revoke;\n\nconst Reinstate = _ref2 => {\n  _s3();\n\n  var _errors$ipfsHash2, _errors$validtill, _errors$certkey2;\n\n  let {\n    setModalData\n  } = _ref2;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues\n  } = useForm();\n  const {\n    contract,\n    accountAddress\n  } = useContext(Web3Context);\n\n  const onSubmit = async data => {\n    if (accountAddress) {\n      setModalData({\n        mode: \"loading\"\n      });\n      const expDate = getValues(\"validtill\") ? Math.floor(new Date(getValues(\"validtill\")).getTime() / 1000) : 0;\n      await contract.methods.reinstate(data.ipfsHash, expDate).send({\n        from: accountAddress\n      }).on(\"transactionHash\", function (hash) {\n        console.log(hash);\n      }).on(\"receipt\", function (receipt) {\n        setModalData({\n          mode: \"display\",\n          data: {\n            ipfsHash: data.ipfsHash,\n            certkey: data.certkey\n          },\n          receipt: receipt\n        });\n      }).on(\"error\", function (error) {\n        console.log(error);\n        window.alert(error.message);\n        setModalData(\"closed\");\n      });\n    } else window.alert(\"Please connect a wallet first\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"IPFS Hash (Address)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors[\"ipfsHash\"] && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_errors$ipfsHash2 = errors[\"ipfsHash\"]) === null || _errors$ipfsHash2 === void 0 ? void 0 : _errors$ipfsHash2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"ipfsHash\", condition),\n        type: \"text\",\n        name: \"ipfsHash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Expiry Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors[\"validtill\"] && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_errors$validtill = errors[\"validtill\"]) === null || _errors$validtill === void 0 ? void 0 : _errors$validtill.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"validtill\", condition),\n        type: \"date\",\n        name: \"validtill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Certificate Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors[\"certkey\"] && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_errors$certkey2 = errors[\"certkey\"]) === null || _errors$certkey2 === void 0 ? void 0 : _errors$certkey2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"certkey\", condition),\n        type: \"text\",\n        name: \"certkey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Reinstate Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 3\n  }, this);\n};\n\n_s3(Reinstate, \"+8Ekdk1a5hFZrUX0aMQ5OMuzRbQ=\", false, function () {\n  return [useForm];\n});\n\n_c3 = Reinstate;\nexport default Actions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Actions\");\n$RefreshReg$(_c2, \"Revoke\");\n$RefreshReg$(_c3, \"Reinstate\");","map":{"version":3,"sources":["/Users/pranjilpathak/Downloads/Asseto/src/components/Actions.jsx"],"names":["useContext","useState","useForm","Web3Context","Modal","Actions","modalData","setModalData","mode","ActionsSVG","condition","required","value","message","Revoke","register","handleSubmit","formState","errors","contract","accountAddress","onSubmit","data","methods","revoke","ipfsHash","send","from","on","hash","console","log","receipt","certkey","error","window","alert","Reinstate","getValues","expDate","Math","floor","Date","getTime","reinstate"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Web3Context } from \"../context/Web3Context\";\n\nimport Modal from \"./CreateModal\";\nimport ActionsSVG from \"../assets/actions.svg\";\nimport \"../styles/actions.scss\";\n\nconst Actions = () => {\n\tconst [modalData, setModalData] = useState({ mode: \"closed\" });\n\n\treturn (\n\t\t<div className=\"actions\">\n\t\t\t<Modal modalData={modalData} setModalData={setModalData} />\n\n\t\t\t<h2>Actions</h2>\n\n\t\t\t<div className=\"action\">\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<div className=\"txt\">\n\t\t\t\t\t\tActions allow users to mutate the certificate status. They can\n\t\t\t\t\t\teither be <b>Revoked</b> or <b>Reinstated</b>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tOnly certificates belonging to the users address will be revoked/\n\t\t\t\t\t\treinstated.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tEncryption key is needed to perform any action.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<img src={ActionsSVG} alt=\"actions\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<hr width=\"75%\" />\n\t\t\t<div className=\"action revoke\">\n\t\t\t\t<h2>Revoke Certificate</h2>\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<div className=\"txt\">\n\t\t\t\t\t\tRevoke existing certificates by filling out the adjacent form.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tThis action is reversible.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tReinstate/ extend the validity of a certificate using the form\n\t\t\t\t\t\tbelow.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tTransaction gas charges are applied.\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Revoke setModalData={setModalData} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<hr width=\"75%\" />\n\t\t\t<div className=\"action reinstate\">\n\t\t\t\t<h2>Reinstate Certificate</h2>\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<div className=\"txt\">\n\t\t\t\t\t\tCertificates can be reinstated using the adjacent form.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tReinstating certificates only extends the expiration date and\n\t\t\t\t\t\tnothing more.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tTransaction gas charges are applied.\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Reinstate setModalData={setModalData} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst condition = {\n\trequired: { value: true, message: \"This field is Required\" },\n};\nconst Revoke = ({ setModalData }) => {\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm();\n\tconst { contract, accountAddress } = useContext(Web3Context);\n\n\tconst onSubmit = async (data) => {\n\t\tif (accountAddress) {\n\t\t\tsetModalData({ mode: \"loading\" });\n\n\t\t\tawait contract.methods\n\t\t\t\t.revoke(data.ipfsHash)\n\t\t\t\t.send({ from: accountAddress })\n\n\t\t\t\t.on(\"transactionHash\", function (hash) {\n\t\t\t\t\tconsole.log(hash);\n\t\t\t\t})\n\n\t\t\t\t.on(\"receipt\", function (receipt) {\n\t\t\t\t\tsetModalData({\n\t\t\t\t\t\tmode: \"display\",\n\t\t\t\t\t\tdata: { ipfsHash: data.ipfsHash, certkey: data.certkey },\n\t\t\t\t\t\treceipt: receipt,\n\t\t\t\t\t});\n\t\t\t\t})\n\n\t\t\t\t.on(\"error\", function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\twindow.alert(error.message);\n\t\t\t\t\tsetModalData(\"closed\");\n\t\t\t\t});\n\t\t} else window.alert(\"Please connect a wallet first\");\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<div className=\"item\">\n\t\t\t\t<label>IPFS Hash (Address)</label>{\" \"}\n\t\t\t\t<span className=\"error\">\n\t\t\t\t\t{errors[\"ipfsHash\"] && <span>{errors[\"ipfsHash\"]?.message}</span>}\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\t{...register(\"ipfsHash\", condition)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"ipfsHash\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"item\">\n\t\t\t\t<label>Certificate Key</label>{\" \"}\n\t\t\t\t<span className=\"error\">\n\t\t\t\t\t{errors[\"certkey\"] && <span>{errors[\"certkey\"]?.message}</span>}\n\t\t\t\t</span>\n\t\t\t\t<input {...register(\"certkey\", condition)} type=\"text\" name=\"certkey\" />\n\t\t\t</div>\n\t\t\t<input type=\"submit\" value=\"Revoke Certificate\" />\n\t\t</form>\n\t);\n};\n\nconst Reinstate = ({ setModalData }) => {\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t\tgetValues,\n\t} = useForm();\n\tconst { contract, accountAddress } = useContext(Web3Context);\n\n\tconst onSubmit = async (data) => {\n\t\tif (accountAddress) {\n\t\t\tsetModalData({ mode: \"loading\" });\n\t\t\tconst expDate = getValues(\"validtill\")\n\t\t\t\t? Math.floor(new Date(getValues(\"validtill\")).getTime() / 1000)\n\t\t\t\t: 0;\n\n\t\t\tawait contract.methods\n\t\t\t\t.reinstate(data.ipfsHash, expDate)\n\t\t\t\t.send({ from: accountAddress })\n\n\t\t\t\t.on(\"transactionHash\", function (hash) {\n\t\t\t\t\tconsole.log(hash);\n\t\t\t\t})\n\n\t\t\t\t.on(\"receipt\", function (receipt) {\n\t\t\t\t\tsetModalData({\n\t\t\t\t\t\tmode: \"display\",\n\t\t\t\t\t\tdata: { ipfsHash: data.ipfsHash, certkey: data.certkey },\n\t\t\t\t\t\treceipt: receipt,\n\t\t\t\t\t});\n\t\t\t\t})\n\n\t\t\t\t.on(\"error\", function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\twindow.alert(error.message);\n\t\t\t\t\tsetModalData(\"closed\");\n\t\t\t\t});\n\t\t} else window.alert(\"Please connect a wallet first\");\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<div className=\"item\">\n\t\t\t\t<label>IPFS Hash (Address)</label>{\" \"}\n\t\t\t\t<span className=\"error\">\n\t\t\t\t\t{errors[\"ipfsHash\"] && <span>{errors[\"ipfsHash\"]?.message}</span>}\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\t{...register(\"ipfsHash\", condition)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"ipfsHash\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"item\">\n\t\t\t\t<label>New Expiry Date</label>{\" \"}\n\t\t\t\t<span className=\"error\">\n\t\t\t\t\t{errors[\"validtill\"] && <span>{errors[\"validtill\"]?.message}</span>}\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\t{...register(\"validtill\", condition)}\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tname=\"validtill\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"item\">\n\t\t\t\t<label>Certificate Key</label>{\" \"}\n\t\t\t\t<span className=\"error\">\n\t\t\t\t\t{errors[\"certkey\"] && <span>{errors[\"certkey\"]?.message}</span>}\n\t\t\t\t</span>\n\t\t\t\t<input {...register(\"certkey\", condition)} type=\"text\" name=\"certkey\" />\n\t\t\t</div>\n\t\t\t<input type=\"submit\" value=\"Reinstate Certificate\" />\n\t\t</form>\n\t);\n};\n\nexport default Actions;\n"]},"metadata":{},"sourceType":"module"}