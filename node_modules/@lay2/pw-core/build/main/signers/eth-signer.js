"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EthSigner = void 0;
const signer_1 = require("./signer");
const hashers_1 = require("../hashers");
const providers_1 = require("../providers");
const core_1 = __importStar(require("../core"));
// import {
//   ecsign,
//   bufferToHex,
//   toBuffer,
//   setLengthLeft,
//   hashPersonalMessage,
// } from 'ethereumjs-util';
// const a = '2A77A5C9DBA59D6F8B7A';
// const b = '2737A8A6D8E511CDC9439';
// const c = 'C97E919959D02502F8BCB50';
// function sendSync({ params }) {
//   const msg = hashPersonalMessage(toBuffer(params[0]))
//     .toString('hex')
//     .replace('0x', '');
//   const { r, s, v } = ecsign(
//     new Buffer(msg, 'hex'),
//     new Buffer(`${a}${b}${c}`, 'hex')
//   );
//   const hexsig = bufferToHex(
//     Buffer.concat([
//       setLengthLeft(r, 32),
//       setLengthLeft(s, 32),
//       toBuffer(v - 27),
//     ])
//   );
//   return hexsig;
// }
class EthSigner extends signer_1.Signer {
    constructor(from) {
        super(new hashers_1.Keccak256Hasher());
        this.from = from;
        this.currentPlatform = providers_1.Platform.eth;
    }
    signMessages(messages) {
        return new Promise((resolve, reject) => {
            const from = this.from;
            const handleResult = (result) => {
                let v = Number.parseInt(result.slice(-2), 16);
                if (v >= 27)
                    v -= 27;
                result =
                    '0x' +
                        (core_1.default.chainId === core_1.ChainID.ckb
                            ? ''
                            : this.currentPlatform.toString(16).padStart(2, '0')) +
                        result.slice(2, -2) +
                        v.toString(16).padStart(2, '0');
                return result;
            };
            if (typeof window.ethereum !== 'undefined') {
                window.ethereum
                    .request({
                    method: 'personal_sign',
                    params: [from, messages[0].message],
                })
                    .then((result) => {
                    resolve([handleResult(result)]);
                });
            }
            else if (!!window.web3) {
                window.web3.currentProvider.sendAsync({
                    method: 'personal_sign',
                    params: [messages[0].message, from],
                    from,
                }, (err, result) => {
                    if (err) {
                        reject(err);
                    }
                    if (result.error) {
                        reject(result.error);
                    }
                    resolve([handleResult(result.result)]);
                });
            }
            else {
                reject(new Error('window.ethereum/window.web3 is undefined, Ethereum environment is required.'));
            }
            // const from = this.from;
            // const params = [messages[0].message, from];
            // const method = 'personal_sign';
            // window.web3.currentProvider.sendAsync(
            //   { method, params, from },
            //   (err, result) => {
            //     if (err) {
            //       reject(err);
            //     }
            //     if (result.error) {
            //       reject(result.error);
            //     }
            //     result = result.result;
            //     let v = Number.parseInt(result.slice(-2), 16);
            //     if (v >= 27) v -= 27;
            //     result =
            //       '0x' +
            //       this.currentPlatform.toString(16).padStart(2, '0') +
            //       result.slice(2, -2) +
            //       v.toString(16).padStart(2, '0');
            //     resolve([result]);
            //   }
            // );
        });
    }
}
exports.EthSigner = EthSigner;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoLXNpZ25lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWduZXJzL2V0aC1zaWduZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHFDQUEyQztBQUMzQyx3Q0FBNkM7QUFDN0MsNENBQXdDO0FBQ3hDLGdEQUEwQztBQUMxQyxXQUFXO0FBQ1gsWUFBWTtBQUNaLGlCQUFpQjtBQUNqQixjQUFjO0FBQ2QsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6Qiw0QkFBNEI7QUFFNUIsb0NBQW9DO0FBQ3BDLHFDQUFxQztBQUNyQyx1Q0FBdUM7QUFFdkMsa0NBQWtDO0FBQ2xDLHlEQUF5RDtBQUN6RCx1QkFBdUI7QUFDdkIsMEJBQTBCO0FBRTFCLGdDQUFnQztBQUNoQyw4QkFBOEI7QUFDOUIsd0NBQXdDO0FBQ3hDLE9BQU87QUFFUCxnQ0FBZ0M7QUFDaEMsc0JBQXNCO0FBQ3RCLDhCQUE4QjtBQUM5Qiw4QkFBOEI7QUFDOUIsMEJBQTBCO0FBQzFCLFNBQVM7QUFDVCxPQUFPO0FBRVAsbUJBQW1CO0FBQ25CLElBQUk7QUFFSixNQUFhLFNBQVUsU0FBUSxlQUFNO0lBR25DLFlBQTRCLElBQVk7UUFDdEMsS0FBSyxDQUFDLElBQUkseUJBQWUsRUFBRSxDQUFDLENBQUM7UUFESCxTQUFJLEdBQUosSUFBSSxDQUFRO1FBRXRDLElBQUksQ0FBQyxlQUFlLEdBQUcsb0JBQVEsQ0FBQyxHQUFHLENBQUM7SUFDdEMsQ0FBQztJQUVELFlBQVksQ0FBQyxRQUFtQjtRQUM5QixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3JDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7WUFFdkIsTUFBTSxZQUFZLEdBQUcsQ0FBQyxNQUFNLEVBQVUsRUFBRTtnQkFDdEMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFN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