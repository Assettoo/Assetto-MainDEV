"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Builder = void 0;
const models_1 = require("../models");
const __1 = __importStar(require(".."));
const FEE_BASE = 1000;
class Builder {
    constructor(feeRate = Builder.MIN_FEE_RATE, collector = __1.default.defaultCollector, witnessArgs = __1.default.chainId === __1.ChainID.ckb
        ? Builder.WITNESS_ARGS.RawSecp256k1
        : Builder.WITNESS_ARGS.Secp256k1) {
        this.feeRate = feeRate;
        this.collector = collector;
        this.witnessArgs = witnessArgs;
    }
    static calcFee(tx, feeRate = Builder.MIN_FEE_RATE) {
        if (feeRate < Builder.MIN_FEE_RATE) {
            feeRate = Builder.MIN_FEE_RATE;
        }
        const txSize = tx.getSize();
        const fee = (feeRate / FEE_BASE) * txSize;
        return new models_1.Amount(fee.toString(), models_1.AmountUnit.shannon);
    }
    getFee() {
        return this.fee;
    }
}
exports.Builder = Builder;
Builder.MIN_FEE_RATE = 1000;
Builder.MIN_CHANGE = new models_1.Amount('61', models_1.AmountUnit.ckb);
Builder.WITNESS_ARGS = {
    Secp256k1: {
        lock: '0x' + '0'.repeat(132),
        input_type: '',
        output_type: '',
    },
    RawSecp256k1: {
        lock: '0x' + '0'.repeat(130),
        input_type: '',
        output_type: '',
    },
    Secp256r1: {
        lock: '0x' + '0'.repeat(600),
        input_type: '',
        output_type: '',
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idWlsZGVycy9idWlsZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxzQ0FBNEQ7QUFFNUQsd0NBQXFDO0FBR3JDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQztBQVN0QixNQUFzQixPQUFPO0lBbUMzQixZQUNZLFVBQWtCLE9BQU8sQ0FBQyxZQUFZLEVBQ3RDLFlBQXVDLFdBQU0sQ0FBQyxnQkFBZ0IsRUFDOUQsY0FBMkIsV0FBTSxDQUFDLE9BQU8sS0FBSyxXQUFPLENBQUMsR0FBRztRQUNqRSxDQUFDLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxZQUFZO1FBQ25DLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFNBQVM7UUFKeEIsWUFBTyxHQUFQLE9BQU8sQ0FBK0I7UUFDdEMsY0FBUyxHQUFULFNBQVMsQ0FBcUQ7UUFDOUQsZ0JBQVcsR0FBWCxXQUFXLENBRWE7SUFDakMsQ0FBQztJQXBCSixNQUFNLENBQUMsT0FBTyxDQUNaLEVBQWUsRUFDZixVQUFrQixPQUFPLENBQUMsWUFBWTtRQUV0QyxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsWUFBWSxFQUFFO1lBQ2xDLE9BQU8sR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDO1NBQ2hDO1FBQ0QsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzVCLE1BQU0sR0FBRyxHQUFHLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxHQUFHLE1BQU0sQ0FBQztRQUMxQyxPQUFPLElBQUksZUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBRSxtQkFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFZRCxNQUFNO1FBQ0osT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ2xCLENBQUM7O0FBN0NILDBCQWdEQztBQS9DaUIsb0JBQVksR0FBRyxJQUFJLENBQUM7QUFDcEIsa0JBQVUsR0FBRyxJQUFJLGVBQU0sQ0FBQyxJQUFJLEVBQUUsbUJBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUM5QyxvQkFBWSxHQUFHO0lBQzdCLFNBQVMsRUFBRTtRQUNULElBQUksRUFBRSxJQUFJLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDNUIsVUFBVSxFQUFFLEVBQUU7UUFDZCxXQUFXLEVBQUUsRUFBRTtLQUNoQjtJQUNELFlBQVksRUFBRTtRQUNaLElBQUksRUFBRSxJQUFJLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDNUIsVUFBVSxFQUFFLEVBQUU7UUFDZCxXQUFXLEVBQUUsRUFBRTtLQUNoQjtJQUNELFNBQVMsRUFBRTtRQUNULElBQUksRUFBRSxJQUFJLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDNUIsVUFBVSxFQUFFLEVBQUU7UUFDZCxXQUFXLEVBQUUsRUFBRTtLQUNoQjtDQUNGLENBQUMifQ==