import JSBI from 'jsbi';
export declare enum AmountUnit {
    shannon = 0,
    ckb = 8
}
export interface FormatOptions {
    section?: 'integer' | 'decimal';
    pad?: boolean;
    commify?: boolean;
    fixed?: number;
}
export declare class Amount {
    static ZERO: Amount;
    add(val: Amount): Amount;
    sub(val: Amount): Amount;
    gt(val: Amount): boolean;
    gte(val: Amount): boolean;
    lt(val: Amount): boolean;
    lte(val: Amount): boolean;
    eq(val: Amount): boolean;
    private amount;
    constructor(amount: string, decimals?: number | AmountUnit);
    toString(decimals?: number | AmountUnit, options?: FormatOptions): string;
    toBigInt(): JSBI;
    toHexString(): string;
    toUInt128LE(): string;
    static fromUInt128LE(hex: any): Amount;
}
