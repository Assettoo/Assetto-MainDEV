import { Script } from './script';
import { AddressPrefix } from '@nervosnetwork/ckb-sdk-utils';
import { Amount } from './amount';
import { NervosAddressVersion } from '../helpers/address';
export { AddressPrefix } from '@nervosnetwork/ckb-sdk-utils';
export declare enum AddressType {
    ckb = 0,
    eth = 1,
    eos = 2,
    tron = 3
}
export declare enum LockType {
    default = 0,
    multisig = 1,
    pw = 2
}
export declare function getDefaultPrefix(): AddressPrefix;
export declare class Address {
    readonly addressString: string;
    readonly addressType: AddressType;
    readonly lockArgs?: string;
    static fromLockScript(lockScript: Script, prefix?: AddressPrefix, addressVersion?: NervosAddressVersion): Address;
    static getEosLockArgs(networkJSON: any, account: string): Promise<string>;
    constructor(addressString: string, addressType: AddressType, lockArgs?: string);
    valid(): boolean;
    minPaymentAmount(): Amount;
    isAcp(): boolean;
    toCKBAddress(addressVersion?: NervosAddressVersion): string;
    toLockScript(): Script;
}
